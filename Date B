#include <stdio.h>

#define M 4
#define N 3



int midterm_quiz_q1(int num);
void midterm_quiz_q2(char arr[], int n);
int midterm_quiz_q3(int grades[M][N]);
int find_max(int grades[][N]);
int validate_avg(double avges[], int index);

int main() {
    
    //char arr[] = {'h', 'e', 'l', 'l', 'o'};
    //midterm_quiz_q2(arr, 5);
    
    int grades[M][N];
    
    for (int i = 0; i < M; i++)
        for (int j = 0; j < N; j++)
            scanf(" %d", &grades[i][j]);
    
    printf("%d", midterm_quiz_q3(grades));
    
    return 0;
}

int midterm_quiz_q1(int num)
{
    
    int sum = 0, temp = num;
    
    for (; num / 10 > 0; num /= 10)
        sum += num % 10;
        
    sum += num;
    
    return sum == temp;
    
}

void midterm_quiz_q2(char arr[], int n) {
    
    char temp[n];
    
    for (int i = 0; i < n; i++) {
        
        for (int x = n - 1; x > -1; x--)
            temp[x] = temp[x-1];
        temp[0] = arr[i];
        
        for (int j = 0, help; j < i; j++) {
            if (temp[j] > temp[j+1]) {
                help = temp[j+1];
                temp[j+1] = temp[j];
                temp[j] = help;
            } else {
                break;
            }
                
        }
        
    }
    
    for (int i = 0; i < n; i++)
        printf("%c, ", temp[i]);
        

}

int midterm_quiz_q3(int grades[M][N])
{
    
    int max = find_max(grades);
    double avgs[M];
    
    for (int i = 0; i < M; i++) {
        int sum = 0;
        for (int j = 0; j < N; j++)
            sum += grades[i][j];
        avgs[i] = (double)sum / N;
    }
    
    for (int i = 0; i < M; i++) {
        if (validate_avg(avgs, i))
            for (int j = 0; j < N; j++)
                if (grades[i][j] == max)
                    return i;
    }
    
    return -1;
        
    
}

int find_max(int grades[][N])
{
    int max = 0;
    for (int i = 0; i < M; i++)
        for (int j = 0; j < N; j++)
            if (grades[i][j] > max)
                max = grades[i][j];
                
    
    return max;
}

int validate_avg(double avgs[], int index)
{
    
    int counter = 0;
    
    for (int i = 0; i < M; i++)
        if (avgs[index] > avgs[i])
            counter++;
            
    return (counter > (M - 3));
    
}











